import { processTest, populateTransaction } from "../test.fixture";

const contractName = "LiFiDiamond";

const testLabel = "SBTVNXTP_known_token_unknown_chain_calldata_false"; // <= Name of the test
const testDirSuffix = "SBTVNXTP_known_token_unknown_chain_calldata_false"; // <= directory to compare device snapshots to
const testNetwork = "bsc";
const signedPlugin = false;

const contractAddr = "0x1231deb6f5749ef6ce6943a275a1d3e7486f4eae";
const chainID = 56;

// From : https://bscscan.com/tx/0xc82ed2a00899bfbc86861fe2f8e4123fa948c4785405aa7df59e0e5f9eea6173
// With destinationChain altered from 0x64 to 0x65
const inputData = "0xc9fb76b100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000200301cb28a19ef0b489976a22138cdee4e7104d140f98aad8ccdeec9dc02acad680000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001af3f329e8be154074d8769d1ffa4ee058b1dbc3000000000000000000000000313e74f7755afbae4f90e02ca49f8f09ff934a37000000000000000000000000000000000000000000000015acdf5a5d888c00000000000000000000000000000000000000000000000000000000000000000065000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007636f6e6e65787400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e7472616e73666572746f2e78797a000000000000000000000000000000000000000000000000000000000000115909bdcbab21954beb4ab65fc2abee9866fa93000000000000000000000000997f29174a766a1da04cf77d135d59dd12fb54d1000000000000000000000000f410f49c547115567f4209bae3dd2dbd855ddac00000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae0000000000000000000000001af3f329e8be154074d8769d1ffa4ee058b1dbc30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000313e74f7755afbae4f90e02ca49f8f09ff934a37000000000000000000000000313e74f7755afbae4f90e02ca49f8f09ff934a37000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000000064c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4701dfe2b7cd00bad7a0ff37ae53429a4f35fd071818df0234969796d399f51aa250000000000000000000000000000000000000000000000000000000063710d880000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000997f29174a766a1da04cf77d135d59dd12fb54d1000000000000000000000000f410f49c547115567f4209bae3dd2dbd855ddac00000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae00000000000000000000000000000000000000000000000000000000000000380000000000000000000000001af3f329e8be154074d8769d1ffa4ee058b1dbc3000000000000000000000000000000000000000000000015acdf5a5d888c000000000000000000000000000000000000000000000000000000000000000000640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015a562ef137aee32be000000000000000000000000313e74f7755afbae4f90e02ca49f8f09ff934a371dfe2b7cd00bad7a0ff37ae53429a4f35fd071818df0234969796d399f51aa250000000000000000000000000000000000000000000000000000000063710d80c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000002a9ea5e8cddf40730f4f4f839f673a51600c314e000000000000000000000000115909bdcbab21954beb4ab65fc2abee9866fa9300000000000000000000000000000000000000000000000000000000636d1a2e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004185cae08a26fad8406d85cec137fa085fea6f05feb565c59ca4ac672b792056b63b05178d6f63465a6f43ae656fed729908121cb454b8c5a60f05d4107e4d0aee1b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";


// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 12, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 9, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 9, // <= Define the number of steps for this test case and this device
    }
];

devices.forEach((device) =>
    processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork)
);
