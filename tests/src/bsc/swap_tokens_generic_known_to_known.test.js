import { processTest, populateTransaction } from "../test.fixture";

const contractName = "LiFiDiamond";

const testLabel = "swap_tokens_generic_known_to_known"; // <= Name of the test
const testDirSuffix = "swap_tokens_generic_known_to_known"; // <= directory to compare device snapshots to
const testNetwork = "bsc";
const signedPlugin = false;

const contractAddr = "0x362fA9D0bCa5D19f743Db50738345ce2b40eC99f";
const chainID = 56;

// From : https://bscscan.com/tx/0x05d3c6629fdf8c1a0e656f752e2be0d87cb5aedb101f1558a4d35650ccecb73b
const inputData = "0xa4baa10c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000180826288a75d488c4cc136b80cba414283ae72e9ea7bf9a15c6ce1eadbfb7330c8000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d6fdde76b8c1c45b33790cc8751d5b88984c44ec0000000000000000000000002fd05265880d01149e38400c54eb5a7f9f13a904000000000000000000000000000000000000000000000000000000000000003800000000000000000000000000000000000000000000000000038d7ea4c680000000000000000000000000000000000000000000000000000000000000000005727562696300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d6fdde76b8c1c45b33790cc8751d5b88984c44ec00000000000000000000000000000000000000000000000000038d7ea4c6800000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000128c43c9ef6000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000038d7ea4c680000000000000000000000000000000000000000000000000003b75938894b81ee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000d6fdde76b8c1c45b33790cc8751d5b88984c44ec869584cd0000000000000000000000001000000000000000000000000000000000000011000000000000000000000000000000000000000000000077c2e982af632b0854000000000000000000000000000000000000000000000000";

// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 6, // <= Define the number of steps for this test case and this device
    }
];

devices.forEach((device) =>
    processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork)
);
