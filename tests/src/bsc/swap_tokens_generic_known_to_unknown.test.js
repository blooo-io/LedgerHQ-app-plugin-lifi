import { processTest, populateTransaction } from "../test.fixture";

const contractName = "LiFiDiamond";

const testLabel = "swap_tokens_generic_known_to_unknown"; // <= Name of the test
const testDirSuffix = "swap_tokens_generic_known_to_unknown"; // <= directory to compare device snapshots to
const testNetwork = "bsc";
const signedPlugin = false;

const contractAddr = "0x362fa9d0bca5d19f743db50738345ce2b40ec99f";
const chainID = 56;

// From : https://bscscan.com/tx/0x32634b26b63a6bfdcf4979027f80d0414afd9e22329dad45cf1cec68c2afcd49
const inputData = "0xa4baa10c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000180e1395dbc0c2729716028d010fc92eef799416220ce978e544f5b81ebcc86979b00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c00000000000000000000000027d72484f1910f5d0226afa4e03742c9cd2b297a000000000000000000000000f1fff7666f0d7e720d5a8ea525e556a58f711281000000000000000000000000000000000000000000000000000000000000003800000000000000000000000000000000000000000000000001b1c39c09601ebf00000000000000000000000000000000000000000000000000000000000000057275626963000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000006b3d817814eabc984d51896b1015c0b89e9737ca000000000000000000000000a128ba44b2738a558a1fdc06d6303d52d3cef8c1000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c00000000000000000000000027d72484f1910f5d0226afa4e03742c9cd2b297a00000000000000000000000000000000000000000000000001b1c39c09601ebf00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000002c47617b389000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c00000000000000000000000027d72484f1910f5d0226afa4e03742c9cd2b297a00000000000000000000000000000000000000000000000001b1c39c09601ebf000000000000000000000000000000000000000000000e7a1f4308bf75a20d550000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000006325aeab00000000000000000000000000000000000000000000000000000000000000010000000000000000000000004c52f61212f9e36922ab78aab250f1a2f000d93c0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000570d59e90616ba3d95a0e64e5894c3a985cad6970000000000000000000000000000000000000000000000000000000000000002000000000000000000000000570d59e90616ba3d95a0e64e5894c3a985cad697000000000000000000000000362fa9d0bca5d19f743db50738345ce2b40ec99f0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000019000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000";

// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 9, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 7, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 7, // <= Define the number of steps for this test case and this device
    }
];

devices.forEach((device) =>
    processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork)
);
