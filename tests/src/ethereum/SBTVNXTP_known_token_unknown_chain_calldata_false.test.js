import { processTest, populateTransaction } from "../test.fixture";

const contractName = "LiFiDiamond";

const testLabel = "SBTVNXTP_known_token_unknown_chain_calldata_false"; // <= Name of the test
const testDirSuffix = "SBTVNXTP_known_token_unknown_chain_calldata_false"; // <= directory to compare device snapshots to
const testNetwork = "ethereum";
const signedPlugin = false;

const contractAddr = "0x362fa9d0bca5d19f743db50738345ce2b40ec99f";
const chainID = 1;

// From : https://etherscan.io/tx/0x0b487fefd3163c233423aa8c97050b838ef98e2ff78e2f345807fd918024d2fb
const inputData = "0x7d7aecd3000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001804399c322acda26488809afaa6c50d4d50f4075575a07dba00cb7a0461afc45b200000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000ddafbb505ad214d7b80b1f830fccc89b60fb7a83000000000000000000000000f7fd885ee51daaa8f874dc605a16a2b05eab2a0a0000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000024a6975c0000000000000000000000000000000000000000000000000000000000000000e7472616e73666572746f2e78797a000000000000000000000000000000000000000000000000000000000000115909bdcbab21954beb4ab65fc2abee9866fa93000000000000000000000000997f29174a766a1da04cf77d135d59dd12fb54d1000000000000000000000000826ccd5ed8ca665555fe45a4f045b61516b241c0000000000000000000000000362fa9d0bca5d19f743db50738345ce2b40ec99f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000ddafbb505ad214d7b80b1f830fccc89b60fb7a83000000000000000000000000f7fd885ee51daaa8f874dc605a16a2b05eab2a0a000000000000000000000000f7fd885ee51daaa8f874dc605a16a2b05eab2a0a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000064c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706cad6c411f4c3484e8e952a8f80270850819ab448c8878a15cdaff028a7152e9000000000000000000000000000000000000000000000000000000024a6975c00000000000000000000000000000000000000000000000000000000063273a5b00000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000997f29174a766a1da04cf77d135d59dd12fb54d1000000000000000000000000826ccd5ed8ca665555fe45a4f045b61516b241c0000000000000000000000000362fa9d0bca5d19f743db50738345ce2b40ec99f0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000024a6975c00000000000000000000000000000000000000000000000000000000000000064000000000000000000000000ddafbb505ad214d7b80b1f830fccc89b60fb7a8300000000000000000000000000000000000000000000000000000002496299f0000000000000000000000000f7fd885ee51daaa8f874dc605a16a2b05eab2a0a6cad6c411f4c3484e8e952a8f80270850819ab448c8878a15cdaff028a7152e90000000000000000000000000000000000000000000000000000000063273a54c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000031efc4aeaa7c39e54a33fdc3c46ee2bd70ae0a09000000000000000000000000115909bdcbab21954beb4ab65fc2abee9866fa93000000000000000000000000000000000000000000000000000000006323470100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041601fbee067996e9475dd98d254430be41e93b5912c2a92caeea0724f20ffe2764c3d176c2b51a55aa1a3516bc3dd24e1e47d83bf404d4ab133d6accb2c93d7921c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";


// Create serializedTx and remove the "0x" prefix
const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 10, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 7, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 7, // <= Define the number of steps for this test case and this device
    }
];

devices.forEach((device) =>
    processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork)
);
